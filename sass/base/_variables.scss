
/* =============================================================
====================== Site Source Path ========================
================================================================ */

$imgsrc: "../img";
// eg. use #{$imgsrc}/blah/blah.jpg

$fontsrc: "../fonts";

/* =============================================================
======================= Typography =============================
================================================================ */

$baseFontSize:          12px;
$inputFontSize:         12px;
$smallFontSize:         10px;
$baseLineHeight:        19px;
$lineHeight:            1;
$baseColor:             #444;

$primaryFont: DroidSans, Arial, Helvetica, sans-serif;

$baseFont: normal #{$baseFontSize} / #{$baseLineHeight} $primaryFont;
$baseFontSmall: normal #{$smallFontSize} / #{$lineHeight} $primaryFont;


/* =============================================================
======================= Colour Vars ============================
================================================================ */
$primary: #444;
$secondary: #181818;
$highlight: #EA4824;


/* =============================================================
============================ Mixins ============================
================================================================ */

// Box Shadow
@mixin box-shadow($shadow1, $shadow2:false, $shadow3:false, $shadow4:false, $shadow5:false) {
 $params: $shadow1;
  @if $shadow2 
    { $params: $shadow1, $shadow2; }
    @if $shadow3 != false
      { $params: $shadow1, $shadow2, $shadow3; }
      @if $shadow4 != false
        { $params: $shadow1, $shadow2, $shadow3, $shadow4; }
        @if $shadow5 != false
          { $params: $shadow1, $shadow2, $shadow3, $shadow4, $shadow5; }

  -webkit-box-shadow: $params;
     -moz-box-shadow: $params;
          box-shadow: $params;

          // -ms-filter: "progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=90, Color='#d3d3d3')";
          //   filter: progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=90, Color='#d3d3d3');

}

// Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

// Transform
@mixin transform($transform) {
   -webkit-transform: $transform;
      -moz-transform: $transform;
        -o-transform: $transform;
           transform: $transform;
}

// Transform Style
@mixin transform-style($transformStyle) {
   -webkit-transform-style: $transformStyle;
      -moz-transform-style: $transformStyle;
        -o-transform-style: $transformStyle;
           transform-style: $transformStyle;
}

// Transform Origin
@mixin transform-origin($transformOrigin) {
   -webkit-transform-origin: $transformOrigin;
      -moz-transform-origin: $transformOrigin;
        -o-transform-origin: $transformOrigin;
           transform-origin: $transformOrigin;
}

// Transition
@mixin transition ($transition) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}

// Transition
@mixin perspective ($perspective) {
  -webkit-perspective: $perspective;
     -moz-perspective: $perspective;
      -ms-perspective: $perspective;
          perspective: $perspective;
}

// Rotate
/* use this syntax :
 @import rotate( 24 ) */
@mixin rotate( $degrees ) {
  -webkit-transform: rotate(#{$degrees}deg);
  -moz-transform: rotate(#{$degrees}deg);
  -ms-transform: rotate(#{$degrees}deg);
  -o-transform: rotate(#{$degrees}deg);
  transform: rotate(#{$degrees}deg);
 }

// Opacity
@mixin opacity ($value)  {
	$ms_opacity : $value * 100;
  	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha($ms_opacity)";
  	filter: alpha(opacity=$ms_opacity);
  	opacity: $value;
}

$easeIn: cubic-bezier(0.825, 0.000, 1.000, 0.640);
$easeInOut: cubic-bezier(0.665, 0.000, 0.430, 1);
$easeOut: cubic-bezier(0.200, 0.470, 0.435, 0.970);
$linear: cubic-bezier(0.250, 0.250, 0.750, 0.750);
// e.g. .transition(.6s,$easeInOut,all);



/**
 * Create vendor-prefixed CSS in one go, e.g.
 * 
   `@include vendor(border-radius, 4px);`
 * 
 */
@mixin vendor($property, $value){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
            #{$property}:$value;
}
/**
 * Create CSS keyframe animations for all vendors in one go, e.g.:
 * 
   .foo{
       @include vendor(animation, shrink 3s);
   }
   
   @include keyframe(shrink){
       from{
           font-size:5em;
       }
   }
 * 
 * Courtesy of @integralist: twitter.com/integralist/status/260484115315437569
 */
@mixin keyframe ($animation-name){
    @-webkit-keyframes $animation-name{
        @content;
    }
    
    @-moz-keyframes $animation-name{
        @content;
    }
    
    @-ms-keyframes $animation-name{
        @content;
    }
    
    @-o-keyframes $animation-name{
        @content;
    }
    
    @keyframes $animation-name{
        @content;
    }
}