//GRID

//Grid mixin allowing to pass base grid width, number of columns and gap




// Declared variables
$_max-width: 960; //in px
$_number-of-columns: 12;
$_gutter: 20; //in px

// Calculated variables
$__margin: percentage(($_gutter/2)/$_max-width);
$__col-width: percentage(1/$_number-of-columns);


@mixin grid(){

	@for $__i from 1 to $_number-of-columns+1{

		.col#{$__i},%col#{$__i}{
			margin-left: $__margin;
			margin-right: $__margin;
			width: ($__col-width * $__i) - ($__margin * 2);
		}

		.col#{$__i}--full{
			width: $__col-width * $__i;
			margin-left: 0;
			margin-right: 0;
		}

		.col#{$__i}--alpha, %col#{$__i}--alpha{
			width: $__col-width * $__i - $__margin;
			margin-right: $__margin;
			margin-left: 0;
		}

		.col#{$__i}--omega, %col#{$__i}--omega{
			width: $__col-width * $__i - $__margin;
			margin-left: $__margin;
			margin-right: 0
		}

		.col--1by#{$__i}{
			margin-left: $__margin;
			margin-right: $__margin;
			width: percentage(1/$__i) - $__margin * 2;
		}

	} // usage: .col$__i




	@for $__i from 1 to $_number-of-columns{
		.col--offset#{$__i}{
			margin-left: $__col-width * $__i + $__margin;
		}
	} //usage .col--offset$__i



	// Lets define the container behaviour
	.container{
		position: relative;
		max-width: #{$_max-width}px;
		margin: 0 auto;

		@extend %cleared;

		.ie8 &{
			max-width: 960px;
		}

	}

	.row {
		position: relative;
		width:100%;
		margin : 0 auto;
		display: block;
		//@extend %clearfix;

	}

	@include bp-max($x-small){
		.col--mob{
			width: 95.833333333333333333333333333333% !important;
			margin-left: auto !important;
			margin-right: auto !important;
			display: block !important;
			float: none !important;
		}
	}

}

@include grid();


@mixin col($__columns){
	width: ($__col-width * $__columns) - ($__margin * 2);
	margin-left: $__margin;
	margin-right: $__margin;
}

@mixin col--full($__columns){
	width: $__col-width * $__columns;
	margin-left: 0;
	margin-right: 0;
}

@mixin col--alpha($__columns){
	width: $__col-width * $__columns - $__margin;
	margin-right: $__margin;
	margin-left: 0;
}

@mixin col--omega($__columns){
	width: $__col-width * $__columns - $__margin;
	margin-left: $__margin;
	margin-right: 0;
}




//    Mixin initialization



